@{
  var Images = new List<string>
  {
    "97106-water-lake-nature-beach-cyan-landscape-sea-clouds-sky-horizon-plants.jpg",
    "Photo-by-Jennifer-Black-of-mountains-with-snow-cover-earlier-in-the-week-resized-scaled.jpg",
    "maxresdefault.jpg",
    "wallpapersden.com_seashore-top-view-beach_1680x1050.jpg",
    "white-lands-wallpapers_7620_1440x900.jpg",
  };
}

<div class="flex justify-center w-screen">
  <div class="relative max-w-screen-2xl">
    <div class="carousel flex pb-1.5">
      @foreach (var image in Images)
      {
      <div class="carousel-item">
        <img src="@Url.Content($"~/images/{@image}")" alt="Carousel Image" class="carousel-image w-full h-96 object-cover bg-gradient-to-b from-white/70 via-white/30">
      </div>
      }
    </div>

    @{
      var directions = new List<(
        string side,
        string action,
        string label,
        string d
      )> {
        ("left", "prev", "start", "M15 19l-7-7 7-7"),
        ("right", "next", "end", "M9 5l7 7-7 7"),
      };
    }
    @foreach (var direction in directions)
    {
    <div class="absolute inset-y-0 @direction.side-0 @direction.action-0 flex items-center justify-@direction.label h-full w-1/2">
      <button
        class="carousel-control-@direction.action flex justify-center items-center hover:bg-white text-white hover:text-cyan-1000 h-96 w-3/4"
        style="mask-image:linear-gradient(
          to @direction.side,
          rgba(0,0,0,0) 0%,
          rgba(255, 255, 255, .6) 40%,
          rgba(255, 255, 255, 1) 100%
        )"
      >
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="@direction.d"></path>
        </svg>
      </div>
    }
</div>

<script>
  const carousel = document.querySelector('.carousel');
  const prevButton = document.querySelector('.carousel-control-prev');
  const nextButton = document.querySelector('.carousel-control-next');

  const SCROLL_INTERVAL = 3000;

  let currentImageIndex = 0;
  const imageCount = carousel.querySelectorAll('.carousel-item').length;

  const scroll = (direction) => {
    currentImageIndex = currentImageIndex + direction;

    carousel.scrollBy({
      left: direction * carousel.offsetWidth,
      behavior: 'smooth'
    });

    if (currentImageIndex >= imageCount) {
      currentImageIndex = 0;

      carousel.scrollTo({
        left: 0,
        behavior: 'smooth'
      });
    } else if (currentImageIndex < 0) {
      currentImageIndex = imageCount - 1;

      carousel.scrollTo({
        left: carousel.scrollWidth - carousel.offsetWidth,
        behavior: 'smooth'
      });
    }
  };

  let timer = setInterval(() => scrollAndResetTimer(), SCROLL_INTERVAL);

  const resetTimer = () => {
    clearInterval(timer);
    timer = setInterval(() => scrollAndResetTimer(), SCROLL_INTERVAL);
  };

  const scrollAndResetTimer = () => {
    scroll(1);
    resetTimer();
  };

  const scrollClick = (direction) => {
    scroll(direction);
    resetTimer();
  };

  prevButton.addEventListener('click', () => scrollClick(-1));
  nextButton.addEventListener('click', () => scrollClick(1));

</script>
